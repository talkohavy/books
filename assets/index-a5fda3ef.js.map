{"version":3,"file":"index-a5fda3ef.js","sources":["../../src/utils/appUrls.js","../../src/utils/regex.js","../../src/utils/rules.js","../../src/pages/LoginPage/index.jsx"],"sourcesContent":["const APP_URLS = {\n  books: '/books',\n  favorites: '/favorites',\n  login: '/login',\n};\n\nexport { APP_URLS };\n","const REGEX = {\n  alphaNumeric: /^[a-zA-Z0-9_]+$/,\n  containsWhitespace: /\\s/,\n  integerNumbers: /^\\d+$/,\n  email: /^[a-zA-Z]+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+\\s?$/,\n  nickname: /^[0-9_a-zA-Zא-ת*-]{1,30}$/,\n  password: /^[a-zA-Z0-9!@#$%^&*()\\-=]{1,20}$/,\n  startsOrEndsWithWhitespace: /(?=(^\\s|\\s{2,}$))/,\n};\n\nexport { REGEX };\n","import { REGEX } from './regex';\n\n/**\n * @typedef {Object} CreateNewRuleFactoryProps\n * @property {(newValue: string) => boolean} [createNewRuleFactoryProps.checkIsValidValue]\n * @property {(value: string) => string} [createNewRuleFactoryProps.transformNewValue]\n */\n\n/**\n * @param {CreateNewRuleFactoryProps} props\n * @returns { (maxLength?: number) => (e: any, newValue: string) => { change: boolean, newValue: string} } Returns the rule which you can use to apply onto an input.\n * @description\n * Creates a rule for when NOT to change an input's value if true.\n */\nfunction createNewRuleFactory({ checkIsValidValue = () => true, transformNewValue }) {\n  return (maxLength) => (e, newValue) => {\n    // conditions when value should NOT change:\n    if (newValue.length > maxLength || !checkIsValidValue(newValue)) return { change: false, newValue: null };\n\n    newValue = transformNewValue?.(newValue) ?? newValue;\n    return { change: true, newValue };\n  };\n}\n\nconst createAlphaNumericRule = createNewRuleFactory({\n  checkIsValidValue: (newValue) => newValue === '' || REGEX.alphaNumeric.test(newValue),\n});\nconst createIntegerNumbersOnlyRule = createNewRuleFactory({\n  checkIsValidValue: (newValue) => newValue === '' || REGEX.integerNumbers.test(newValue),\n});\nconst createNoSpacesAllowedRule = createNewRuleFactory({\n  checkIsValidValue: (newValue) => !REGEX.containsWhitespace.test(newValue),\n});\nconst createStartEndSpacesRule = createNewRuleFactory({\n  checkIsValidValue: (newValue) => !REGEX.startsOrEndsWithWhitespace.test(newValue),\n});\n\nexport { createAlphaNumericRule, createIntegerNumbersOnlyRule, createNoSpacesAllowedRule, createStartEndSpacesRule };\n","import { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { APP_URLS } from '../../utils/appUrls';\nimport { createNoSpacesAllowedRule } from '../../utils/rules';\n\nconst noSpacesAllowedRule = createNoSpacesAllowedRule();\n\nexport default function LoginPage() {\n  const navigateTo = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onLoginClick = useCallback(() => navigateTo({ pathname: APP_URLS.books }), [navigateTo]);\n  const isDisabled = !email || !password;\n\n  return (\n    <div className='mt-10 flex flex-col items-center justify-start gap-2 rounded-md border border-black bg-black p-5'>\n      <Input value={email} setValue={setEmail} dontChangeRule={noSpacesAllowedRule} />\n      <Input value={password} setValue={setPassword} />\n\n      <Button\n        isDisabled={isDisabled}\n        onClick={onLoginClick}\n        className='h-10 w-20 rounded-xl border border-black bg-red-500 p-1 text-white hover:rounded-2xl hover:bg-red-400 disabled:cursor-default disabled:rounded-xl disabled:bg-gray-400'\n      >\n        Login\n      </Button>\n    </div>\n  );\n}\n"],"names":["APP_URLS","REGEX","createNewRuleFactory","checkIsValidValue","transformNewValue","maxLength","e","newValue","createNoSpacesAllowedRule","noSpacesAllowedRule","LoginPage","navigateTo","useNavigate","email","setEmail","useState","password","setPassword","onLoginClick","useCallback","isDisabled","jsxs","jsx","Input","Button"],"mappings":"qGAAA,MAAMA,EAAW,CACf,MAAO,SACP,UAAW,aACX,MAAO,QACT,ECJMC,EAAQ,CACZ,aAAc,kBACd,mBAAoB,KACpB,eAAgB,QAChB,MAAO,uDACP,SAAU,4BACV,SAAU,mCACV,2BAA4B,mBAC9B,ECMA,SAASC,EAAqB,CAAE,kBAAAC,EAAoB,IAAM,GAAM,kBAAAC,CAAiB,EAAI,CACnF,OAAQC,GAAc,CAACC,EAAGC,IAEpBA,EAAS,OAASF,GAAa,CAACF,EAAkBI,CAAQ,EAAU,CAAE,OAAQ,GAAO,SAAU,IAAI,GAEvGA,GAAWH,GAAA,YAAAA,EAAoBG,KAAaA,EACrC,CAAE,OAAQ,GAAM,SAAAA,GAE3B,CAQA,MAAMC,EAA4BN,EAAqB,CACrD,kBAAoBK,GAAa,CAACN,EAAM,mBAAmB,KAAKM,CAAQ,CAC1E,CAAC,ECzBKE,EAAsBD,EAA0B,EAEtD,SAAwBE,GAAY,CAClC,MAAMC,EAAaC,IAEb,CAACC,EAAOC,CAAQ,EAAIC,WAAS,EAAE,EAC/B,CAACC,EAAUC,CAAW,EAAIF,WAAS,EAAE,EAErCG,EAAeC,EAAAA,YAAY,IAAMR,EAAW,CAAE,SAAUX,EAAS,KAAO,CAAA,EAAG,CAACW,CAAU,CAAC,EACvFS,EAAa,CAACP,GAAS,CAACG,EAG5B,OAAAK,EAAA,KAAC,MAAI,CAAA,UAAU,mGACb,SAAA,CAAAC,MAACC,GAAM,MAAOV,EAAO,SAAUC,EAAU,eAAgBL,EAAqB,EAC7Ea,EAAA,IAAAC,EAAA,CAAM,MAAOP,EAAU,SAAUC,EAAa,EAE/CK,EAAA,IAACE,EAAA,CACC,WAAAJ,EACA,QAASF,EACT,UAAU,yKACX,SAAA,OAAA,CAED,CACF,CAAA,CAAA,CAEJ"}